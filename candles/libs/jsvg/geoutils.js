function Point(a,b){this.x=a;this.y=b}function Circle(a,b,c){this.x=a;this.y=b;this.r=c;this.width=2*c;this.height=2*c;this.radius=c;this.descr=function(){return"x "+this.x+" y "+this.y+" r "+this.r}}function circle(a,b,c){return new Circle(a,b,c)}function ccenter(a){return new Point(a.x,a.y)}function cscale(a,b){return new Circle(a.x,a.y,a.r*b)}function rectangle(a,b,c,d){return{x:a,y:b,width:c,height:d}}
function vrotate(a,b){var c=Math.sin(b);b=Math.cos(b);return $V([a.e(1)*b-a.e(2)*c,a.e(1)*c+a.e(2)*b])}function adjcircle(a,b,c){var d=$V([a.x,a.y]);a=vrotate($V([a.r+b,0]),c);d=d.add(a);return new Circle(d.e(1),d.e(2),b)}
function circles2tangent2(a,b,c,d,e,f){var h=a.r,g=c.x,k=c.y;c=c.r;a=$V([a.x-g,a.y-k]);var l=a.modulus();isens=1;if("IN"==b||"IN"==d)isens=-1;b=h+isens*e;d=c+e;b=(l*l-b*b+d*d)/(2*d*l);if(-1>b||1<b)return console.log("cosv ",b),[];f=a.rotate(Math.acos(b)*f,$V([0,0])).toUnitVector().multiply(d);g=$V([g,k]).add(f);return[new circle(g.e(1),g.e(2),e)]}
function circles2tangent(a,b,c,d,e,f){var h=a.r,g=c.x,k=c.y;c=c.r;a=$V([a.x-g,a.y-k]);var l=a.modulus();isens=1;if("IN"==b||"IN"==d)isens=-1;b=h+isens*e;d=c+e;b=(l*l-b*b+d*d)/(2*d*l);if(-1>b||1<b)b=-1>b?-1:1;f=a.rotate(Math.acos(b)*f,$V([0,0])).toUnitVector().multiply(d);g=$V([g,k]).add(f);return new Circle(g.e(1),g.e(2),e)}
function circles2tangentoptim(a,b,c,d){var e=b.x,f=b.y,h=a.x-e,g=a.y-f,k=Math.sqrt(h*h+g*g);a=a.r+1*c;b=b.r+c;a=(k*k-a*a+b*b)/(2*b*k);if(-1>a||1<a)a=-1>a?-1:1;d*=Math.sqrt(1-a*a);return[e+(a*h-d*g)*b/k,f+(d*h+a*g)*b/k,c]}function circleviewbox(a){return[a.x-a.r,a.y-a.r,a.x+a.r,a.y+a.r]}function mergeviewboxes(a,b){if(0>=b.length)return a;var c=a[1],d=a[2],e=a[3],f=b[1],h=b[2],g=b[3];a=mymin([a[0],b[0]]);c=mymin([c,f]);d=mymax([d,h]);e=mymax([e,g]);return[a,c,d,e]}
function expandviewbox(a,b){var c=a[0],d=a[1],e=a[2],f=a[3];a=(e-c)*b;b*=f-d;c=(c+e)/2;d=(d+f)/2;return[c-a/2,d-b/2,c+a/2,d+b/2]}function centerviewbox(a,b){var c=a[1],d=a[3];a=mymax([b[0]-a[0],a[2]-b[0]]);c=mymax([b[1]-c,d-b[1]]);return[b[0]-a,b[1]-c,b[0]+a,b[1]+c]}function squareviewbox(a){var b=a[0],c=a[1],d=a[2],e=a[3];a=(d+b)/2;var f=(e+c)/2;b=mymax([d-b,e-c])/2;return[a-b,f-b,a+b,f+b]}
function ratioviewbox(a,b){var c=a[0],d=a[1],e=a[2],f=a[3];a=e-c;var h=f-d;c=(e+c)/2;d=(f+d)/2;1<b?a*=b:h/=b;return[c-a/2,d-h/2,c+a/2,d+a/2]}function convertviewboxwidthheight(a){var b=a[0],c=a[1];return[b,c,a[2]-b,a[3]-c]}function arecirclescolliding(a,b){var c=a.x-b.x,d=a.y-b.y;a=a.radius+b.radius;return-1E-6>c*c+d*d-a*a}function computecirclesviewbox(a){for(var b=circleviewbox(a[0]),c=1;c<a.length;++c)b=mergeviewboxes(b,circleviewbox(a[c]));return b}
function checkcirclescollision(a,b,c){for(var d=0;d<a.length;++d)if(arecirclescolliding(b,a[d],c))return!0;return!1}function checkcollisionquadtree(a,b){return a.iscollidingoptim(b)}function collidings(a,b,c){return a.collidings(b,c)}function insertquadtree(a,b){a.add(b)}function circlepoints(a,b,c){var d=[],e=$V([a.x,a.y]);a=$V([a.r,0]);b=samples(0,6.283138,b);var f;for(f=0;f<b.length;f++){var h=e.add(vrotate(a,b[f]+c));d.push(new Point(h.e(1),h.e(2)))}return d}
function linepoints(a,b,c){var d=[],e=samples(a.x,b.x,c);a=samples(a.y,b.y,c);for(b=0;b<c;b++)d.push(new Point(e[b],a[b]));return d}function linecircles(a,b,c){var d=[],e=linepoints(a,b,c);a=$V([a.x-b.x,a.y-b.y]).modulus()/c;for(b=0;b<e.length;b++)c=e[b],d.push(new Circle(c.x,c.y,a));return d}function dist2(a,b){var c=a.x-b.x;a=a.y-b.y;return c*c+a*a}function arecircletangent(a,b){var c=(a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);a=(a.r+b.r)*(a.r+b.r);return 1E-5>(c-a)*(c-a)/a?!0:!1};
