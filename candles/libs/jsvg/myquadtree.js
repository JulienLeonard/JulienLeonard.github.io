function Quad(a,c,b,d,e){this.xmin=a;this.xmax=b;this.ymin=c;this.ymax=d;this.xmiddle=(a+b)/2;this.ymiddle=(c+d)/2;this.nsubquadsperside=2;this.subquadslength=this.nsubquadsperside*this.nsubquadsperside;this.subquads=Array(this.subquadslength);this.subquadsdone=!1;this.MAXCIRCLENUMBER=50;this.circlemap=Array(this.MAXCIRCLENUMBER);this.circlemapindex=0;this.errormargin=e;this.xmaxerror=this.xmax*(1+e);this.xminerror=this.xmin*(1-e);this.ymaxerror=this.ymax*(1+e);this.yminerror=this.ymin*(1-e)}
Quad.prototype.descr=function(){return"- xmin "+this.xmin+" xmax "+this.xmax+" ymin "+this.ymin+" ymax "+this.ymax};Quad.prototype.intersect=function(a){var c=a.x,b=a.y;a=a.r;var d=!1;c-a<=this.xmaxerror&&c+a>=this.xminerror&&b-a<=this.ymaxerror&&b+a>=this.yminerror&&(d=!0);return d};Quad.prototype.add=function(a){this.addwithoutcheck(a)};Quad.prototype.addwithoutcheck=function(a){this.subquadsdone?this.dispatch(a):this.insert(a)};
Quad.prototype.dispatch=function(a){for(var c=0;c<this.subquadslength;c++){var b=this.subquads[c];b.intersect(a)&&b.addwithoutcheck(a)}};Quad.prototype.ncircles=function(){return this.circlemapindex};Quad.prototype.insert=function(a){this.circlemap[this.circlemapindex]=a;this.circlemapindex+=1;this.circlemapindex==this.MAXCIRCLENUMBER&&1E-4<this.xmax-this.xmin&&this.split()};
Quad.prototype.split=function(){var a=(this.xmax-this.xmin)/this.nsubquadsperside,c=(this.ymax-this.ymin)/this.nsubquadsperside,b,d,e=this.xmin;for(b=0;b<this.nsubquadsperside;b++){var f=this.ymin;var g=b<this.nsubquadsperside-1?e+a:this.xmax;for(d=0;d<this.nsubquadsperside;d++){var h=d<this.nsubquadsperside-1?f+c:this.ymax;this.subquads[b*this.nsubquadsperside+d]=new Quad(e,f,g,h,this.errormargin);f=h}e=g}this.subquadsdone=!0;for(a=0;a<this.circlemapindex;a++)this.dispatch(this.circlemap[a]);this.circlemapindex=
0};Quad.prototype.hascollision=function(a){var c=this.errormargin;if(this.subquadsdone)for(var b=0;b<this.subquadslength;b++){var d=this.subquads[b];if(d.intersect(a)&&d.hascollision(a,c))return!0}else for(b=0;b<this.circlemapindex;b++)if(arecirclescolliding(a,this.circlemap[b],c))return!0;return!1};function QuadTree(a,c,b,d,e){this.errormargin=e;this.rootquad=new Quad(a,c,b,d,e)}QuadTree.prototype.add=function(a){this.rootquad.add(a)};
QuadTree.prototype.adds=function(a){for(var c=0;c<a.length;c++)this.add(a[c]);return this};QuadTree.prototype.iscollidingoptim=function(a){return this.rootquad.hascollision(a)};
function MetaQuadTree(a,c,b,d,e,f){this.errormargin=f;this.xmin=a;this.xmax=b;this.ymin=c;this.ymax=d;this.cellsize=e;b=Math.floor((b-a)/e);d=Math.floor((d-c)/e);this.mquadtrees=Array(b);for(var g=0;g<b;g++){this.mquadtrees[g]=Array(d);for(var h=a+e,k=c,l=0;l<d;l++){var m=k+e;this.mquadtrees[g][l]=new QuadTree(a,k,h,m,f);k=m}a=h}}
MetaQuadTree.prototype.add=function(a){for(var c=Math.floor(((a.x+a.r)*(1+this.errormargin)-this.xmin)/this.cellsize),b=Math.floor(((a.y-a.r)*(1-this.errormargin)-this.ymin)/this.cellsize),d=Math.floor(((a.y+a.r)*(1+this.errormargin)-this.ymin)/this.cellsize),e=Math.floor(((a.x-a.r)*(1-this.errormargin)-this.xmin)/this.cellsize);e<c+1;e++)for(var f=b;f<d+1;f++)this.mquadtrees[e][f].add(a)};MetaQuadTree.prototype.adds=function(a){for(var c=0;c<a.length;c++)this.add(a[c]);return this};
MetaQuadTree.prototype.iscollidingoptim=function(a){for(var c=Math.floor(((a.x+a.r)*(1+this.errormargin)-this.xmin)/this.cellsize),b=Math.floor(((a.y-a.r)*(1-this.errormargin)-this.ymin)/this.cellsize),d=Math.floor(((a.y+a.r)*(1+this.errormargin)-this.ymin)/this.cellsize),e=Math.floor(((a.x-a.r)*(1-this.errormargin)-this.xmin)/this.cellsize);e<c+1;e++)for(var f=b;f<d+1;f++){var g=this.mquadtrees[e][f].iscollidingoptim(a);if(g)return g}return!1};
